openapi: 3.1.0
info:
  title: Auth Service API
  description: API for auth service
  version: 1.0.0

paths:
  /api/v1/auth/login:
    post:
      summary: Login user
      operationId: loginUser
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: An auth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Authorization error
        '400':
          description: Request validation error
        '500':
          description: Server error

  /api/v1/auth/register:
    post:
      summary: Register user
      operationId: registerUser
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Successful register
        '400':
          description: Register error
        '500':
          description: Server error

  /api/v1/auth/verify:
    get:
      summary: Verify user token
      operationId: verifyToken
      tags:
        - auth
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          description: JWT token of signed in user
          schema:
            type: string
      responses:
        '200':
          description: Token verification successful returning subject of token
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized token
        '500':
          description: Server error

components:
  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        authToken:
          type: string
    RegisterRequest:
      type: object
      required:
        - email
        - password
        - username
        - userType
      properties:
        email:
          type: string
        password:
          type: string
        username:
          type: string
        userType:
          type: string
          enum: [ BRAND, INFLUENCER ]